/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package event;

import dbconnect.DatabaseHelper;
import static event.Decoration.USER;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import static java.lang.Thread.sleep;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import login.login;

/**
 *
 * @author Sakibul
 */
public class Events extends javax.swing.JFrame {

    /**
     * Creates new form Events
     */
    Connection conn = null;
    PreparedStatement pstatement = null;
    Statement st = null;
    ResultSet result = null;
    DefaultTableModel model;
    DefaultTableModel model1;
    DefaultTableModel model2;
    String a;
    int b;
    static String USER;            
    SimpleDateFormat sdf;
    public Events(String username) {
        USER=username;
        initComponents();
        model = new DefaultTableModel();
        AddEventTable.setModel(model);
        model.addColumn("Event Id");
        model.addColumn("Event Type");
        model.addColumn("Event Duration");
        model.addColumn("Event Enter");
        model.addColumn("Event Date");
        model.addColumn("Event Time");
        model.addColumn("Event Guests");
        model.addColumn("Hall Name");
        model.addColumn("Hall Price");

        model1 = new DefaultTableModel();
        viewEventTable.setModel(model1);
        model1.addColumn("Event Id");
        model1.addColumn("Event Type");
        model1.addColumn("Event Duration");
        model1.addColumn("Event Enter");
        model1.addColumn("Event Date");
        model1.addColumn("Event Time");
        model1.addColumn("Event Guests");
        model1.addColumn("Hall Name");
        model1.addColumn("Hall Price");
        jButton1AddEvent2.setVisible(false);
        geteventId();
        getHallroomNo();
        txthprice.setVisible(false);
        
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width / 2 - getWidth() / 2,
                size.height / 2 - getHeight() / 2);

        new Thread() {
            public void run() {
                for (;;) {
                    sdf = new SimpleDateFormat("hh:mm:ss a");
                    Date d = new Date();
                    //System.out.println(sdf.format(d));
                    Time.setText(sdf.format(d));
                    sdf = new SimpleDateFormat("dd-MMM-yyyy");

                    dates.setText(sdf.format(d));

                    sdf = new SimpleDateFormat("EEEE");
                    // Date d3 = new Date();
                    day.setText(sdf.format(d));

                    try {
                        sleep(1000);
                    } catch (Exception e) {
                    }

                }

            }
        }.start();

        welcomeuser.setText(USER);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headerPanel = new javax.swing.JPanel();
        welcomeuser = new javax.swing.JLabel();
        welcomeuser1 = new javax.swing.JLabel();
        Time = new javax.swing.JLabel();
        dates = new javax.swing.JLabel();
        day = new javax.swing.JLabel();
        buttonLogOut = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        eventPanel2 = new javax.swing.JPanel();
        jTabbedPaneEvent2 = new javax.swing.JTabbedPane();
        addEventPanel2 = new javax.swing.JPanel();
        jLabel2EventType2 = new javax.swing.JLabel();
        jLabel3EventDate2 = new javax.swing.JLabel();
        txtAddEventDuration2 = new javax.swing.JTextField();
        jLabel4EventDuration2 = new javax.swing.JLabel();
        jComboBox1AddEventType2 = new javax.swing.JComboBox();
        jLabel1Entertainment2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        AddEventTable = new javax.swing.JTable();
        jButton1AddEvent2 = new javax.swing.JButton();
        addEventReset2 = new javax.swing.JButton();
        jLabel2AddEventNoOfGuests2 = new javax.swing.JLabel();
        txtAddEventNoOfGuests2 = new javax.swing.JTextField();
        jComboBox2AddEventEntertainment2 = new javax.swing.JComboBox();
        jLabel3AddEventTime2 = new javax.swing.JLabel();
        jButton4EventUpdate2 = new javax.swing.JButton();
        addCusDetails2 = new javax.swing.JButton();
        jComboAddEventHours2 = new javax.swing.JComboBox();
        jComboAddEventMin2 = new javax.swing.JComboBox();
        jComboAddEventPM2 = new javax.swing.JComboBox();
        addEventNext2 = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        addEventAvailability2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txteventid = new javax.swing.JTextField();
        cname = new javax.swing.JComboBox<>();
        cprice = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        comboroom = new javax.swing.JComboBox<>();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        viewEventPanel = new javax.swing.JPanel();
        jLabel1EnterEventID = new javax.swing.JLabel();
        txtViewEventID = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        viewEventTable = new javax.swing.JTable();
        ViewEvent = new javax.swing.JButton();
        viewEventReset = new javax.swing.JButton();
        viewEventBack = new javax.swing.JButton();
        viewEventNext = new javax.swing.JButton();
        txthprice = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        Back = new javax.swing.JMenu();
        Home = new javax.swing.JMenu();
        Exit = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        headerPanel.setBackground(new java.awt.Color(0, 51, 51));
        headerPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 153, 255), 2));
        headerPanel.setLayout(null);

        welcomeuser.setFont(new java.awt.Font("Monotype Corsiva", 3, 30)); // NOI18N
        welcomeuser.setForeground(new java.awt.Color(240, 240, 240));
        welcomeuser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        welcomeuser.setText("Name");
        headerPanel.add(welcomeuser);
        welcomeuser.setBounds(420, 60, 170, 20);

        welcomeuser1.setFont(new java.awt.Font("Monotype Corsiva", 3, 36)); // NOI18N
        welcomeuser1.setForeground(new java.awt.Color(240, 240, 240));
        welcomeuser1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        welcomeuser1.setText("WELCOME ");
        headerPanel.add(welcomeuser1);
        welcomeuser1.setBounds(370, 10, 270, 30);

        Time.setFont(new java.awt.Font("Monotype Corsiva", 3, 30)); // NOI18N
        Time.setForeground(new java.awt.Color(240, 240, 240));
        Time.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Time.setText("Time");
        headerPanel.add(Time);
        Time.setBounds(190, 90, 170, 30);

        dates.setFont(new java.awt.Font("Monotype Corsiva", 3, 30)); // NOI18N
        dates.setForeground(new java.awt.Color(240, 240, 240));
        dates.setText("date");
        headerPanel.add(dates);
        dates.setBounds(640, 90, 210, 30);

        day.setFont(new java.awt.Font("Monotype Corsiva", 3, 30)); // NOI18N
        day.setForeground(new java.awt.Color(240, 240, 240));
        day.setText("Day");
        headerPanel.add(day);
        day.setBounds(450, 90, 140, 30);

        buttonLogOut.setBackground(new java.awt.Color(255, 255, 255));
        buttonLogOut.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        buttonLogOut.setForeground(new java.awt.Color(51, 153, 255));
        buttonLogOut.setText("Log Out");
        buttonLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLogOutActionPerformed(evt);
            }
        });
        headerPanel.add(buttonLogOut);
        buttonLogOut.setBounds(910, 80, 77, 33);

        jPanel5.setBackground(new java.awt.Color(0, 51, 51));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 171, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        eventPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jTabbedPaneEvent2.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPaneEvent2.setPreferredSize(new java.awt.Dimension(830, 548));

        addEventPanel2.setBackground(new java.awt.Color(255, 255, 255));
        addEventPanel2.setPreferredSize(new java.awt.Dimension(830, 550));

        jLabel2EventType2.setText("Event Type  ");

        jLabel3EventDate2.setText("Event Date ");

        txtAddEventDuration2.setPreferredSize(new java.awt.Dimension(8, 25));
        txtAddEventDuration2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAddEventDuration2KeyTyped(evt);
            }
        });

        jLabel4EventDuration2.setText("Event Duration");

        jComboBox1AddEventType2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Type", "Wedding", "Birthday Party", "Anniversary", "Get together", "Office Function", " " }));

        jLabel1Entertainment2.setText("Entertainment");

        AddEventTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Event Id", "Event Type", "Event Duration", "Entertainment", "Event Date", "Event Time", "No of Guests", "Hall No", "Hall Price"
            }
        ));
        AddEventTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddEventTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(AddEventTable);

        jButton1AddEvent2.setBackground(new java.awt.Color(51, 153, 255));
        jButton1AddEvent2.setText("Add Event");
        jButton1AddEvent2.setPreferredSize(new java.awt.Dimension(90, 25));
        jButton1AddEvent2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton1AddEvent2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton1AddEvent2MouseExited(evt);
            }
        });
        jButton1AddEvent2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1AddEvent2ActionPerformed(evt);
            }
        });

        addEventReset2.setBackground(new java.awt.Color(51, 153, 255));
        addEventReset2.setText("Reset");
        addEventReset2.setPreferredSize(new java.awt.Dimension(80, 25));
        addEventReset2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addEventReset2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addEventReset2MouseExited(evt);
            }
        });
        addEventReset2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEventReset2ActionPerformed(evt);
            }
        });

        jLabel2AddEventNoOfGuests2.setText("No of Guests");

        txtAddEventNoOfGuests2.setMinimumSize(new java.awt.Dimension(8, 25));
        txtAddEventNoOfGuests2.setPreferredSize(new java.awt.Dimension(8, 25));
        txtAddEventNoOfGuests2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAddEventNoOfGuests2KeyTyped(evt);
            }
        });

        jComboBox2AddEventEntertainment2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Type", "Band", "DJ", "Calipso", "Disco Light", "Dancing Group", " " }));
        jComboBox2AddEventEntertainment2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2AddEventEntertainment2ActionPerformed(evt);
            }
        });

        jLabel3AddEventTime2.setText("Event Time");

        jButton4EventUpdate2.setBackground(new java.awt.Color(51, 153, 255));
        jButton4EventUpdate2.setText("Update");
        jButton4EventUpdate2.setPreferredSize(new java.awt.Dimension(80, 25));
        jButton4EventUpdate2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4EventUpdate2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton4EventUpdate2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton4EventUpdate2MouseExited(evt);
            }
        });
        jButton4EventUpdate2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4EventUpdate2ActionPerformed(evt);
            }
        });

        addCusDetails2.setBackground(new java.awt.Color(51, 153, 255));
        addCusDetails2.setText("Add Customer Details");
        addCusDetails2.setPreferredSize(new java.awt.Dimension(160, 25));
        addCusDetails2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addCusDetails2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addCusDetails2MouseExited(evt);
            }
        });
        addCusDetails2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCusDetails2ActionPerformed(evt);
            }
        });

        jComboAddEventHours2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Hours", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));

        jComboAddEventMin2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Min", "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));

        jComboAddEventPM2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AM", "PM" }));

        addEventNext2.setBackground(new java.awt.Color(51, 153, 255));
        addEventNext2.setText("Next");
        addEventNext2.setPreferredSize(new java.awt.Dimension(80, 25));
        addEventNext2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addEventNext2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addEventNext2MouseExited(evt);
            }
        });
        addEventNext2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEventNext2ActionPerformed(evt);
            }
        });

        jLabel28.setText("Hall Price");

        addEventAvailability2.setText("Ckeck Availability");
        addEventAvailability2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEventAvailability2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Hall Name :");

        jLabel2.setText("Event Id :");

        jLabel3.setText("Hall Room No :");

        javax.swing.GroupLayout addEventPanel2Layout = new javax.swing.GroupLayout(addEventPanel2);
        addEventPanel2.setLayout(addEventPanel2Layout);
        addEventPanel2Layout.setHorizontalGroup(
            addEventPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addEventPanel2Layout.createSequentialGroup()
                .addGroup(addEventPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addEventPanel2Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(addEventPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addEventPanel2Layout.createSequentialGroup()
                                .addGroup(addEventPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(addEventPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel3AddEventTime2)
                                        .addGap(22, 22, 22)
                                        .addComponent(jComboAddEventHours2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jComboAddEventMin2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jComboAddEventPM2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(addEventPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel2EventType2)
                                        .addGap(18, 18, 18)
                                        .addComponent(jComboBox1AddEventType2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(79, 79, 79)
                                .addGroup(addEventPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(addEventPanel2Layout.createSequentialGroup()
                                        .addGroup(addEventPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(addEventPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(addEventPanel2Layout.createSequentialGroup()
                                                    .addComponent(jLabel28)
                                                    .addGap(57, 57, 57))
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addEventPanel2Layout.createSequentialGroup()
                                                    .addComponent(jLabel2AddEventNoOfGuests2)
                                                    .addGap(38, 38, 38)))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addEventPanel2Layout.createSequentialGroup()
                                                .addComponent(jLabel1)
                                                .addGap(46, 46, 46)))
                                        .addGroup(addEventPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtAddEventNoOfGuests2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(cname, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(cprice, 0, 108, Short.MAX_VALUE)))
                                    .addGroup(addEventPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel1Entertainment2)
                                        .addGap(32, 32, 32)
                                        .addComponent(jComboBox2AddEventEntertainment2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(addEventAvailability2)))
                            .addGroup(addEventPanel2Layout.createSequentialGroup()
                                .addGroup(addEventPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4EventDuration2)
                                    .addComponent(jLabel3EventDate2)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGroup(addEventPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addEventPanel2Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(addEventPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txteventid)
                                            .addComponent(comboroom, 0, 132, Short.MAX_VALUE)))
                                    .addGroup(addEventPanel2Layout.createSequentialGroup()
                                        .addGroup(addEventPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(addEventPanel2Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addEventPanel2Layout.createSequentialGroup()
                                                .addGap(3, 3, 3)
                                                .addComponent(txtAddEventDuration2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(6, 6, 6))))))
                    .addGroup(addEventPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 706, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addEventPanel2Layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(jButton1AddEvent2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addCusDetails2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(addEventNext2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4EventUpdate2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addEventReset2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(91, Short.MAX_VALUE))
        );
        addEventPanel2Layout.setVerticalGroup(
            addEventPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addEventPanel2Layout.createSequentialGroup()
                .addGroup(addEventPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(addEventPanel2Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(addEventAvailability2)
                        .addGap(32, 32, 32))
                    .addGroup(addEventPanel2Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(addEventPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(comboroom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(addEventPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txteventid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)))
                .addGroup(addEventPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(addEventPanel2Layout.createSequentialGroup()
                        .addGroup(addEventPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(cname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(addEventPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel28)
                            .addComponent(cprice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28))
                    .addGroup(addEventPanel2Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(addEventPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2EventType2)
                            .addComponent(jComboBox1AddEventType2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(addEventPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4EventDuration2)
                            .addComponent(txtAddEventDuration2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)))
                .addGroup(addEventPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(addEventPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtAddEventNoOfGuests2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2AddEventNoOfGuests2)
                        .addComponent(jLabel3EventDate2)))
                .addGap(27, 27, 27)
                .addGroup(addEventPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1Entertainment2)
                    .addComponent(jComboBox2AddEventEntertainment2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboAddEventHours2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboAddEventMin2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboAddEventPM2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3AddEventTime2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(addEventPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addEventReset2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addEventNext2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4EventUpdate2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addCusDetails2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1AddEvent2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jTabbedPaneEvent2.addTab("Add Event", addEventPanel2);

        viewEventPanel.setBackground(new java.awt.Color(255, 255, 255));
        viewEventPanel.setPreferredSize(new java.awt.Dimension(830, 550));

        jLabel1EnterEventID.setText("Enter Event ID");

        viewEventTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Event ID", "Event Type", "Event Duration", "Entertainment", "Event Date", "Event Time", "No of Guests", "Hall No", "Hall Price"
            }
        ));
        viewEventTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewEventTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(viewEventTable);

        ViewEvent.setBackground(new java.awt.Color(51, 153, 255));
        ViewEvent.setText("View");
        ViewEvent.setPreferredSize(new java.awt.Dimension(80, 25));
        ViewEvent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ViewEventMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ViewEventMouseExited(evt);
            }
        });
        ViewEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewEventActionPerformed(evt);
            }
        });

        viewEventReset.setBackground(new java.awt.Color(51, 153, 255));
        viewEventReset.setText("Reset");
        viewEventReset.setPreferredSize(new java.awt.Dimension(80, 25));
        viewEventReset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                viewEventResetMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                viewEventResetMouseExited(evt);
            }
        });
        viewEventReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewEventResetActionPerformed(evt);
            }
        });

        viewEventBack.setBackground(new java.awt.Color(51, 153, 255));
        viewEventBack.setText("Back");
        viewEventBack.setPreferredSize(new java.awt.Dimension(80, 25));
        viewEventBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                viewEventBackMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                viewEventBackMouseExited(evt);
            }
        });
        viewEventBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewEventBackActionPerformed(evt);
            }
        });

        viewEventNext.setBackground(new java.awt.Color(51, 153, 255));
        viewEventNext.setText("Add Customer Deatils");
        viewEventNext.setPreferredSize(new java.awt.Dimension(80, 25));
        viewEventNext.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                viewEventNextMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                viewEventNextMouseExited(evt);
            }
        });
        viewEventNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewEventNextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout viewEventPanelLayout = new javax.swing.GroupLayout(viewEventPanel);
        viewEventPanel.setLayout(viewEventPanelLayout);
        viewEventPanelLayout.setHorizontalGroup(
            viewEventPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewEventPanelLayout.createSequentialGroup()
                .addGroup(viewEventPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(viewEventPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 787, Short.MAX_VALUE))
                    .addGroup(viewEventPanelLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jLabel1EnterEventID)
                        .addGap(52, 52, 52)
                        .addGroup(viewEventPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txthprice)
                            .addComponent(txtViewEventID, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE))
                        .addGap(99, 99, 99)
                        .addComponent(ViewEvent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewEventPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(viewEventBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64)
                .addComponent(viewEventNext, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(viewEventReset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(128, 128, 128))
        );
        viewEventPanelLayout.setVerticalGroup(
            viewEventPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewEventPanelLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(viewEventPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1EnterEventID)
                    .addComponent(txtViewEventID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ViewEvent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(txthprice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(viewEventPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewEventBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewEventNext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewEventReset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jTabbedPaneEvent2.addTab("View Event", viewEventPanel);

        javax.swing.GroupLayout eventPanel2Layout = new javax.swing.GroupLayout(eventPanel2);
        eventPanel2.setLayout(eventPanel2Layout);
        eventPanel2Layout.setHorizontalGroup(
            eventPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(eventPanel2Layout.createSequentialGroup()
                .addComponent(jTabbedPaneEvent2, javax.swing.GroupLayout.PREFERRED_SIZE, 812, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        eventPanel2Layout.setVerticalGroup(
            eventPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneEvent2, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(eventPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 455, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(eventPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        Back.setText("Back");
        Back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BackMouseClicked(evt);
            }
        });
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });
        jMenuBar1.add(Back);

        Home.setText("Home");
        Home.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HomeMouseClicked(evt);
            }
        });
        Home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomeActionPerformed(evt);
            }
        });
        jMenuBar1.add(Home);

        Exit.setText("Exit");
        Exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ExitMouseClicked(evt);
            }
        });
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        jMenuBar1.add(Exit);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 825, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 1024, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackMouseClicked
        // TODO add your handling code here:
        EventManager mp = new EventManager(USER);
        mp.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BackMouseClicked

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BackActionPerformed

    private void HomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HomeMouseClicked
        // TODO add your handling code here:
        EventManager HM = new EventManager(USER);
        HM.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_HomeMouseClicked

    private void HomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HomeActionPerformed

    private void ExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitMouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_ExitMouseClicked

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ExitActionPerformed

    private void buttonLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLogOutActionPerformed
        int result=JOptionPane.showConfirmDialog(rootPane, "Do You Want to LogOut");
        if(result==0){

            login login=new login();
            login.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_buttonLogOutActionPerformed

    private void txtAddEventDuration2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAddEventDuration2KeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || c == KeyEvent.VK_DELETE)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtAddEventDuration2KeyTyped

    private void AddEventTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddEventTableMouseClicked
        int row = AddEventTable.getSelectedRow();

        String eventId = AddEventTable.getValueAt(row, 0).toString();
        System.out.println("Event ID" + eventId);
        String eventType = AddEventTable.getValueAt(row, 1).toString();
        String eventDuration = AddEventTable.getValueAt(row, 2).toString();
        String eventEnter = AddEventTable.getValueAt(row, 3).toString();

        String eventTime = AddEventTable.getValueAt(row, 5).toString();
        String eventGuests = AddEventTable.getValueAt(row, 6).toString();
        String eventHall = AddEventTable.getValueAt(row, 7).toString();
        String hallPrice = AddEventTable.getValueAt(row, 8).toString();
        //String eventDate=AddEventTable.getModel().getValueAt(row, 4);

        txtAddEventDuration2.setText(eventDuration);
        jComboBox2AddEventEntertainment2.setSelectedItem(eventEnter);
        jComboBox1AddEventType2.setSelectedItem(eventType);
        jComboAddEventHours2.setSelectedItem(eventTime.substring(0, 2));
        jComboAddEventMin2.setSelectedItem(eventTime.substring(2, 4));
        jComboAddEventPM2.setSelectedItem(eventTime.substring(4, 6));
        txtAddEventNoOfGuests2.setText(eventGuests);
        //addEventHallAvailability.setSelectedItem(eventHall);
        cprice.addItem(hallPrice);
    }//GEN-LAST:event_AddEventTableMouseClicked

    private void jButton1AddEvent2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1AddEvent2MouseEntered
        jButton1AddEvent2.setForeground(Color.yellow);
    }//GEN-LAST:event_jButton1AddEvent2MouseEntered

    private void jButton1AddEvent2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1AddEvent2MouseExited
        jButton1AddEvent2.setForeground(Color.black);
    }//GEN-LAST:event_jButton1AddEvent2MouseExited

    private void jButton1AddEvent2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1AddEvent2ActionPerformed
        if (jComboBox1AddEventType2.getSelectedIndex() == 0) {
            jComboBox1AddEventType2.setBackground(new Color(255, 150, 150));
            JOptionPane.showMessageDialog(eventPanel2, "Select Event Type.");
        } else {
            if (txtAddEventDuration2.getText().isEmpty()) {
                txtAddEventDuration2.setBackground(new Color(255, 150, 150));
                JOptionPane.showMessageDialog(eventPanel2, "Insert Event Duration.");
            } else {
                if (txtAddEventNoOfGuests2.getText().isEmpty()) {
                    txtAddEventNoOfGuests2.setBackground(new Color(255, 150, 150));
                    JOptionPane.showMessageDialog(eventPanel2, "Please Insert Guest Number");
                } else {
                    if (((JTextField) jDateChooser1.getDateEditor().getUiComponent()).getText().isEmpty()) {
                        jDateChooser1.setBackground(new Color(255, 150, 150));
                        JOptionPane.showMessageDialog(eventPanel2, "Please select event date");
                    } else {
                        String eventGuests = txtAddEventNoOfGuests2.getText();
                        int no = Integer.parseInt(eventGuests);
                        if (no < 150) {
                            JOptionPane.showMessageDialog(null, "Number of guests should be more than 150");
                        } else {
                            if (jComboBox2AddEventEntertainment2.getSelectedIndex() == 0) {
                                JOptionPane.showMessageDialog(eventPanel2, "select Entertainment Type");
                            } else {
                                int x = JOptionPane.showConfirmDialog(null, "Do you want to save?");
                                if (x == 0) {

                                    String eventId = txteventid.getText();
                                    String eventType = jComboBox1AddEventType2.getSelectedItem().toString();
                                    String eventDuration = txtAddEventDuration2.getText();
                                    String eventEnter = jComboBox2AddEventEntertainment2.getSelectedItem().toString();

                                    String eventDate = ((JTextField) jDateChooser1.getDateEditor().getUiComponent()).getText();
                                    String hours = jComboAddEventHours2.getSelectedItem().toString();
                                    String min = jComboAddEventMin2.getSelectedItem().toString();
                                    String pm = jComboAddEventPM2.getSelectedItem().toString();
                                    String eventTime = hours + " :" + min + " " + pm;
                                    eventGuests = txtAddEventNoOfGuests2.getText();
                                    String hallName = cname.getSelectedItem().toString();

                                    //String hallName=jTextField1.getText();
                                    String hallPrice = cprice.getSelectedItem().toString();

                                    int duration = Integer.parseInt(eventDuration);
                                    if (duration > 6) {
                                        JOptionPane.showMessageDialog(null, "Time duration should be maximum 6 hours");
                                    }
                                    Connection conn;
                                    Statement st;
                                    ResultSet rs;
                                    try {
                                        conn = DatabaseHelper.getDBConnection();
                                        String sql = "INSERT INTO event (eventId, eventType, eventDuration, eventEnter, eventDate, eventTime, eventGuests, hallName, hallPrice) VALUES ('" + eventId + "','" + eventType + "','" + eventDuration + "','" + eventEnter + "','" + eventDate + "','" + eventTime + "','" + eventGuests + "','" + hallName + "','" + hallPrice + "')";
                                        String sql2="UPDATE hallroom SET  h_status = 'Unavailable' WHERE h_name ='"+hallName+"'";
                                        //String sql3="insert into eventbill(room_bill, event_id) values('"+hallPrice+"','" + eventId + "')";
                                        st=conn.createStatement();
                                        st.executeUpdate(sql);
                                        st=conn.createStatement();
                                        st.executeUpdate(sql2);
                                        st=conn.createStatement();
                                        // st.executeUpdate(sql3);

                                        st = conn.createStatement();
                                        result = st.executeQuery("select * from event where eventId='" + eventId + "'");
                                        while (result.next()) {
                                            model.addRow(new Object[]{result.getString("eventId"), result.getString("eventType"), result.getString("eventDuration"), result.getString("eventEnter"), result.getString("eventDate"), result.getString("eventTime"), result.getString("eventGuests"), result.getString("hallName"), result.getString("hallPrice")});
                                        }

                                        JOptionPane.showMessageDialog(null, "Successfully added to the database");
                                        result.close();
                                        st.close();
                                        conn.close();
                                    } catch (Exception e) {
                                        System.out.println(e);
                                    }
                                }
                            }

                        }
                    }
                }
            }
        }

        //check no of guests-should be more than 150
    }//GEN-LAST:event_jButton1AddEvent2ActionPerformed

    private void addEventReset2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addEventReset2MouseEntered
        addEventReset2.setForeground(Color.yellow);
    }//GEN-LAST:event_addEventReset2MouseEntered

    private void addEventReset2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addEventReset2MouseExited
        addEventReset2.setForeground(Color.black);
    }//GEN-LAST:event_addEventReset2MouseExited

    private void addEventReset2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEventReset2ActionPerformed
        txtAddEventDuration2.setText("");
        txtAddEventNoOfGuests2.setText("");
        jComboAddEventHours2.setSelectedItem("Hours");
        jComboAddEventMin2.setSelectedItem("Mins");
        jComboAddEventPM2.setSelectedItem("AM");
        jComboBox1AddEventType2.setSelectedItem("Select Type");
        jComboBox2AddEventEntertainment2.setSelectedItem("");
        txteventid.setText("");

    }//GEN-LAST:event_addEventReset2ActionPerformed

    private void txtAddEventNoOfGuests2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAddEventNoOfGuests2KeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || c == KeyEvent.VK_DELETE)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtAddEventNoOfGuests2KeyTyped

    private void jComboBox2AddEventEntertainment2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2AddEventEntertainment2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2AddEventEntertainment2ActionPerformed

    private void jButton4EventUpdate2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4EventUpdate2MouseClicked
        // TODO add your handling code here:
        int row = AddEventTable.getSelectedRow();
    }//GEN-LAST:event_jButton4EventUpdate2MouseClicked

    private void jButton4EventUpdate2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4EventUpdate2MouseEntered
        jButton4EventUpdate2.setForeground(Color.yellow);
    }//GEN-LAST:event_jButton4EventUpdate2MouseEntered

    private void jButton4EventUpdate2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4EventUpdate2MouseExited
        jButton4EventUpdate2.setForeground(Color.black);
    }//GEN-LAST:event_jButton4EventUpdate2MouseExited

    private void jButton4EventUpdate2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4EventUpdate2ActionPerformed

        if (jComboBox1AddEventType2.getSelectedIndex() == 0) {
            jComboBox1AddEventType2.setBackground(new Color(255, 150, 150));
            JOptionPane.showMessageDialog(eventPanel2, "Select Event Type.");
        } else {
            if (txtAddEventDuration2.getText().isEmpty()) {
                txtAddEventDuration2.setBackground(new Color(255, 150, 150));
                JOptionPane.showMessageDialog(eventPanel2, "Insert Event Duration.");
            } else {
                if (txtAddEventNoOfGuests2.getText().isEmpty()) {
                    txtAddEventNoOfGuests2.setBackground(new Color(255, 150, 150));
                    JOptionPane.showMessageDialog(eventPanel2, "Please Insert Guest Number");
                } else {
                    if (((JTextField) jDateChooser1.getDateEditor().getUiComponent()).getText().isEmpty()) {
                        jDateChooser1.setBackground(new Color(255, 150, 150));
                        JOptionPane.showMessageDialog(eventPanel2, "Please select event date");
                    } else {
                        String eventGuests = txtAddEventNoOfGuests2.getText();
                        int no = Integer.parseInt(eventGuests);
                        if (no < 150) {
                            JOptionPane.showMessageDialog(null, "Number of guests should be more than 150");
                        } else {
                            if (jComboBox2AddEventEntertainment2.getSelectedIndex() == 0) {
                                JOptionPane.showMessageDialog(eventPanel2, "select Entertainment Type");
                            } else {
                                int x = JOptionPane.showConfirmDialog(null, "Do you want to update?");

                                if (x == 0) {

                                    String eventId = txteventid.getText();
                                    String eventType = jComboBox1AddEventType2.getSelectedItem().toString();
                                    String eventDuration = txtAddEventDuration2.getText();
                                    String eventEnter = jComboBox2AddEventEntertainment2.getSelectedItem().toString();
                                    String eventDate = ((JTextField) jDateChooser1.getDateEditor().getUiComponent()).getText();

                                    String hours = jComboAddEventHours2.getSelectedItem().toString();
                                    String min = jComboAddEventMin2.getSelectedItem().toString();
                                    String pm = jComboAddEventPM2.getSelectedItem().toString();
                                    String eventTime = hours + min + pm;

                                    String eventGuest = txtAddEventNoOfGuests2.getText();
                                    String eventHall = cname.getSelectedItem().toString();

                                    String sql = "UPDATE event SET eventType='" + eventType + "',eventDuration='" + eventDuration + "',eventEnter='" + eventEnter + "',eventDate='" + eventDate + "',eventTime='" + eventTime + "',eventGuests='" + eventGuest + "',hallName='" + eventHall + "' WHERE eventId='" + eventId + "'";
                                    Connection con = null;
                                    Statement st = null;
                                    ResultSet rs=null;
                                    try {
                                        con = DatabaseHelper.getDBConnection();
                                        st = con.createStatement();
                                        int count = 0;
                                        count = st.executeUpdate(sql);

                                        if (count > 0) {
                                            JOptionPane.showMessageDialog(eventPanel2, "Update Successfull.");
                                        }
                                        rs=st.executeQuery("select * from event where eventId='" + eventId + "'");
                                        while(rs.next()){
                                            model.addRow(new Object[]{rs.getString("eventId"), rs.getString("eventType"), rs.getString("eventDuration"), rs.getString("eventEnter"), rs.getString("eventDate"), rs.getString("eventTime"), rs.getString("eventGuests"), rs.getString("hallName"), rs.getString("hallPrice")});
                                        }
                                        rs.close();
                                        st.close();
                                        con.close();

                                    } catch (Exception e) {
                                        e.printStackTrace();
                                    }

                                }
                            }

                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_jButton4EventUpdate2ActionPerformed

    private void addCusDetails2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addCusDetails2MouseEntered
        addCusDetails2.setForeground(Color.yellow);
    }//GEN-LAST:event_addCusDetails2MouseEntered

    private void addCusDetails2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addCusDetails2MouseExited
        addCusDetails2.setForeground(Color.black);
    }//GEN-LAST:event_addCusDetails2MouseExited

    private void addCusDetails2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCusDetails2ActionPerformed

        String eventId = txteventid.getText();
        String hallP = cprice.getSelectedItem().toString();
        String hno=comboroom.getSelectedItem().toString();
        Customer cu = new Customer(eventId, hallP,hno,USER);
        cu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_addCusDetails2ActionPerformed

    private void addEventNext2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addEventNext2MouseEntered
        addEventNext2.setForeground(Color.yellow);
    }//GEN-LAST:event_addEventNext2MouseEntered

    private void addEventNext2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addEventNext2MouseExited
        addEventNext2.setForeground(Color.black);
    }//GEN-LAST:event_addEventNext2MouseExited

    private void addEventNext2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEventNext2ActionPerformed
        jTabbedPaneEvent2.setSelectedIndex(1);
    }//GEN-LAST:event_addEventNext2ActionPerformed

    private void addEventAvailability2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEventAvailability2ActionPerformed

        Connection con;
        Statement st;
        ResultSet rs;
        String eventDate = ((JTextField) jDateChooser1.getDateEditor().getUiComponent()).getText();

        int count = 0;
        try {
            con = DatabaseHelper.getDBConnection();
            st = con.createStatement();
            rs = st.executeQuery("select * from event where eventDate='" + eventDate + "' ");

            while (rs.next()) {
                count = rs.getRow();
            }
        } catch (Exception e) {
        }
        if(eventDate.isEmpty()){
            JOptionPane.showMessageDialog(eventPanel2, "Please Pick Your Event Date");
        }else{
            if (count > 0) {
                JOptionPane.showMessageDialog(null, "Sorry Event Date is not Available");
            } else {
                if (jComboAddEventHours2.getSelectedItem().toString() == "Hours" || jComboAddEventMin2.getSelectedItem().toString() == "Min") {
                    JOptionPane.showMessageDialog(null, "Select the event time");
                } else {

                    try {
                        con = DatabaseHelper.getDBConnection();
                        st = con.createStatement();

                        String sql = "SELECT * FROM hallroom WHERE h_status = 'Available' ";
                        rs = st.executeQuery(sql);
                        int c=0;
                        while (rs.next()) {
                            cname.addItem(rs.getString("h_name"));
                            cprice.addItem(rs.getString("h_price"));
                            c=rs.getRow();
                        }
                        if(c==0){
                            JOptionPane.showMessageDialog(eventPanel2, "Sorry Hall Room is Not Available");
                        }else{
                            jButton1AddEvent2.setVisible(true);
                        }
                        rs.close();
                        st.close();
                        con.close();

                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }

            }
        }

    }//GEN-LAST:event_addEventAvailability2ActionPerformed

    private void viewEventTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewEventTableMouseClicked

    }//GEN-LAST:event_viewEventTableMouseClicked

    private void ViewEventMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ViewEventMouseEntered
        ViewEvent.setForeground(Color.yellow);
    }//GEN-LAST:event_ViewEventMouseEntered

    private void ViewEventMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ViewEventMouseExited
        ViewEvent.setForeground(Color.black);
    }//GEN-LAST:event_ViewEventMouseExited

    private void ViewEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewEventActionPerformed
        if (viewEventTable.getRowCount() > 0) {
            for (int i = viewEventTable.getRowCount() - 1; i >= 0; i--) {
                model1.removeRow(i);
            }
        }
        Connection con = null;
        Statement st = null;
        ResultSet rs = null;
        try {
            con = DatabaseHelper.getDBConnection();
            String a = txtViewEventID.getText();
            String sql2 = "SELECT * FROM event WHERE eventId ='" + a + "'";
            st = con.createStatement();
            rs = st.executeQuery(sql2);

            while (rs.next()) {

                model1.addRow(new Object[]{rs.getString("eventId"), rs.getString("eventType"), rs.getString("eventDuration"), rs.getString("eventEnter"), rs.getString("eventDate"), rs.getString("eventTime"), rs.getString("eventGuests"), rs.getString("hallName"), rs.getString("hallPrice")});
                txthprice.setText(rs.getString("hallPrice"));
            }
            rs.close();
            st.close();
            con.close();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_ViewEventActionPerformed

    private void viewEventResetMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewEventResetMouseEntered
        viewEventReset.setForeground(Color.yellow);
    }//GEN-LAST:event_viewEventResetMouseEntered

    private void viewEventResetMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewEventResetMouseExited
        viewEventReset.setForeground(Color.black);
    }//GEN-LAST:event_viewEventResetMouseExited

    private void viewEventResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewEventResetActionPerformed
        txtViewEventID.setText("");
    }//GEN-LAST:event_viewEventResetActionPerformed

    private void viewEventBackMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewEventBackMouseEntered
        viewEventBack.setForeground(Color.yellow);
    }//GEN-LAST:event_viewEventBackMouseEntered

    private void viewEventBackMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewEventBackMouseExited
        viewEventBack.setForeground(Color.black);
    }//GEN-LAST:event_viewEventBackMouseExited

    private void viewEventBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewEventBackActionPerformed
        jTabbedPaneEvent2.setSelectedIndex(0);
    }//GEN-LAST:event_viewEventBackActionPerformed

    private void viewEventNextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewEventNextMouseEntered
        viewEventNext.setForeground(Color.yellow);
    }//GEN-LAST:event_viewEventNextMouseEntered

    private void viewEventNextMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewEventNextMouseExited
        viewEventNext.setForeground(Color.black);
    }//GEN-LAST:event_viewEventNextMouseExited

    private void viewEventNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewEventNextActionPerformed
        String eventId = txtViewEventID.getText();
        String hallP = txthprice.getText();
        String hno=comboroom.getSelectedItem().toString();
        Customer cu = new Customer(eventId, hallP, hno,USER);
        cu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_viewEventNextActionPerformed

    /**
     * @param args the command line arguments
     */
    public void geteventId() {
        Connection con;
        Statement st;
        ResultSet rs;
        try {
            con = DatabaseHelper.getDBConnection();
            st = con.createStatement();
            rs = st.executeQuery("select eventId from event");
            while (rs.next()) {

                b = rs.getInt("eventId");

            }
            int c = b + 1;
            a = String.valueOf(c);
            txteventid.setText(a);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void getHallroomNo(){
        Connection con;
        Statement st;
        ResultSet rs;
        String ab="Available";
        try {
            con = DatabaseHelper.getDBConnection();
            st=con.createStatement();
            rs=st.executeQuery("select * from hallroom where h_status='"+ab+"'");
            while(rs.next()){
                comboroom.addItem(rs.getString("h_id"));
            }
            rs.close();
            st.close();
            con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    public void tableloadevent() {
        try {
            String sql = "SELECT event_id, eventType, eventDuration, eventEnter, eventDate, eventTime, eventGuests, hallName, hallPrice FROM event";
            pstatement = conn.prepareStatement(sql);
            result = pstatement.executeQuery();
            while (result.next()) {
                model.addRow(new Object[]{result.getString("event_id"), result.getString("eventType"), result.getString("eventDuration"), result.getString("eventEnter"), result.getString("eventDate"), result.getString("eventTime"), result.getString("eventGuests"), result.getString("hallName"), result.getString("hallPrice")});
            }

        } catch (Exception e) {
            e.printStackTrace();

        }
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Events.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Events.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Events.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Events.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Events(USER).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable AddEventTable;
    private javax.swing.JMenu Back;
    private javax.swing.JMenu Exit;
    private javax.swing.JMenu Home;
    private javax.swing.JLabel Time;
    private javax.swing.JButton ViewEvent;
    private javax.swing.JButton addCusDetails2;
    private javax.swing.JButton addEventAvailability2;
    private javax.swing.JButton addEventNext2;
    private javax.swing.JPanel addEventPanel2;
    private javax.swing.JButton addEventReset2;
    private javax.swing.JButton buttonLogOut;
    private javax.swing.JComboBox<String> cname;
    private javax.swing.JComboBox<String> comboroom;
    private javax.swing.JComboBox<String> cprice;
    private javax.swing.JLabel dates;
    private javax.swing.JLabel day;
    private javax.swing.JPanel eventPanel2;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JButton jButton1AddEvent2;
    private javax.swing.JButton jButton4EventUpdate2;
    private javax.swing.JComboBox jComboAddEventHours2;
    private javax.swing.JComboBox jComboAddEventMin2;
    private javax.swing.JComboBox jComboAddEventPM2;
    private javax.swing.JComboBox jComboBox1AddEventType2;
    private javax.swing.JComboBox jComboBox2AddEventEntertainment2;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel1EnterEventID;
    private javax.swing.JLabel jLabel1Entertainment2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel2AddEventNoOfGuests2;
    private javax.swing.JLabel jLabel2EventType2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel3AddEventTime2;
    private javax.swing.JLabel jLabel3EventDate2;
    private javax.swing.JLabel jLabel4EventDuration2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPaneEvent2;
    private javax.swing.JTextField txtAddEventDuration2;
    private javax.swing.JTextField txtAddEventNoOfGuests2;
    private javax.swing.JTextField txtViewEventID;
    private javax.swing.JTextField txteventid;
    private javax.swing.JTextField txthprice;
    private javax.swing.JButton viewEventBack;
    private javax.swing.JButton viewEventNext;
    private javax.swing.JPanel viewEventPanel;
    private javax.swing.JButton viewEventReset;
    private javax.swing.JTable viewEventTable;
    private javax.swing.JLabel welcomeuser;
    private javax.swing.JLabel welcomeuser1;
    // End of variables declaration//GEN-END:variables
}
