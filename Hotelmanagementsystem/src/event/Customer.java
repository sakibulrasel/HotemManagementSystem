/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package event;


import dbconnect.DatabaseHelper;
import static event.EventManager.USER;
import static event.Payment.USER;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import static java.lang.Thread.sleep;
import java.sql.*;
import java.sql.Statement;
import java.text.SimpleDateFormat;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import login.login;


/**
 *
 * @author Sakibul
 */

public class Customer extends javax.swing.JFrame {

    /**
     * Creates new form Customer
     */
    DefaultTableModel model;
    DefaultTableModel model1;
    DefaultTableModel model2;
    static String e, h, g;
    static String USER;            
    SimpleDateFormat sdf;

    public Customer(String eventId, String hallP, String hno, String username) {
        USER=username;
        initComponents();
        model = new DefaultTableModel();
        addCustomerTable.setModel(model);
        model.addColumn("Event Id");
        model.addColumn("Customer Name");
        model.addColumn("NID");
        model.addColumn("Address");
        model.addColumn("Telephone No");

        model2 = new DefaultTableModel();
        viewCustomerTable.setModel(model2);
        model2.addColumn("Event Id");
        model2.addColumn("Customer Name");
        model2.addColumn("NID");
        model2.addColumn("Address");
        model2.addColumn("Telephone No");

        model1 = new DefaultTableModel();
        updateCustomerTable.setModel(model1);
        model1.addColumn("Event Id");
        model1.addColumn("Customer Name");
        model1.addColumn("NID");
        model1.addColumn("Address");
        model1.addColumn("Telephone No");

        e = eventId;
        h = hallP;
        g=hno;
        txthallroomno.setText(g);
        addCusEventIDlbl.setText(e);
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width / 2 - getWidth() / 2,
                size.height / 2 - getHeight() / 2);

        new Thread() {
            public void run() {
                for (;;) {
                    sdf = new SimpleDateFormat("hh:mm:ss a");
                    java.util.Date d = new java.util.Date();
                    //System.out.println(sdf.format(d));
                    Time.setText(sdf.format(d));
                    sdf = new SimpleDateFormat("dd-MMM-yyyy");

                    dates.setText(sdf.format(d));

                    sdf = new SimpleDateFormat("EEEE");
                    // Date d3 = new Date();
                    day.setText(sdf.format(d));

                    try {
                        sleep(1000);
                    } catch (Exception e) {
                    }

                }

            }
        }.start();
       
        
        
        welcomeuser.setText(USER);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        customerPanel = new javax.swing.JPanel();
        jTabbedPaneCustomer = new javax.swing.JTabbedPane();
        addCustomerPanel = new javax.swing.JPanel();
        jLabel1AddCustomerName = new javax.swing.JLabel();
        txtAddCustomerName = new javax.swing.JTextField();
        jLabel2AddCustomerNIC = new javax.swing.JLabel();
        txtAddCustomerNIC = new javax.swing.JTextField();
        jLabel4AddAddress = new javax.swing.JLabel();
        txtAddCustomerAddress = new javax.swing.JTextField();
        jLabel5AddContactNo = new javax.swing.JLabel();
        txtAddCustomerTelephoneNo = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        addCustomerTable = new javax.swing.JTable();
        jButton4AddCustomerAdd = new javax.swing.JButton();
        addCusReset = new javax.swing.JButton();
        addCusEventID = new javax.swing.JLabel();
        addCusBack = new javax.swing.JButton();
        addCusNext = new javax.swing.JButton();
        addCustAddFP = new javax.swing.JButton();
        hallPrice = new javax.swing.JLabel();
        addCusEventIDlbl = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txthallroomno = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        viewCustomerPanel = new javax.swing.JPanel();
        jLabel1ViewEnterCustomerNIC = new javax.swing.JLabel();
        txtViewCustomerEnterCustomerNIC = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        viewCustomerTable = new javax.swing.JTable();
        viewCusNext = new javax.swing.JButton();
        viewCusBack = new javax.swing.JButton();
        viewCusSearch = new javax.swing.JButton();
        viewCusReset = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txteventid = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        hrno = new javax.swing.JTextField();
        updateCustomerPanel = new javax.swing.JPanel();
        jLabel1UpdateEnterCustomerNIC = new javax.swing.JLabel();
        txtUpdateEnterCustomerNIC = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        updateCustomerTable = new javax.swing.JTable();
        jButton5UpdateCustomerUpdate = new javax.swing.JButton();
        UpdateCusReset = new javax.swing.JButton();
        jLabel4UpdateCustomerName = new javax.swing.JLabel();
        txtUpdateCustomerName = new javax.swing.JTextField();
        jLabel4CustomerAddress = new javax.swing.JLabel();
        txtUpdateCustomerAdd = new javax.swing.JTextField();
        jLabel10CustomerTel = new javax.swing.JLabel();
        txtUpdateCustomerTel = new javax.swing.JTextField();
        jButton12UpdateCusSearch = new javax.swing.JButton();
        updateCusEventIDlbl = new javax.swing.JLabel();
        updateCusBack = new javax.swing.JButton();
        updateCusNext = new javax.swing.JButton();
        updateCusEventID = new javax.swing.JTextField();
        headerPanel = new javax.swing.JPanel();
        welcomeuser = new javax.swing.JLabel();
        welcomeuser1 = new javax.swing.JLabel();
        Time = new javax.swing.JLabel();
        dates = new javax.swing.JLabel();
        day = new javax.swing.JLabel();
        buttonLogOut = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        Back = new javax.swing.JMenu();
        Home = new javax.swing.JMenu();
        Exit = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        customerPanel.setBackground(new java.awt.Color(255, 255, 255));

        jTabbedPaneCustomer.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPaneCustomer.setPreferredSize(new java.awt.Dimension(830, 548));

        addCustomerPanel.setBackground(new java.awt.Color(255, 255, 255));
        addCustomerPanel.setPreferredSize(new java.awt.Dimension(830, 550));

        jLabel1AddCustomerName.setText("Customer Name");

        jLabel2AddCustomerNIC.setText("Customer NID");

        txtAddCustomerNIC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddCustomerNICActionPerformed(evt);
            }
        });
        txtAddCustomerNIC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAddCustomerNICKeyTyped(evt);
            }
        });

        jLabel4AddAddress.setText("Address");

        jLabel5AddContactNo.setText("Contact No");

        txtAddCustomerTelephoneNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAddCustomerTelephoneNoKeyTyped(evt);
            }
        });

        addCustomerTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 153, 255)));
        addCustomerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Event ID", "Customer Name", "NID", "Address", "Telephone No"
            }
        ));
        addCustomerTable.setGridColor(new java.awt.Color(51, 153, 255));
        jScrollPane4.setViewportView(addCustomerTable);

        jButton4AddCustomerAdd.setBackground(new java.awt.Color(51, 153, 255));
        jButton4AddCustomerAdd.setText("Add Customer");
        jButton4AddCustomerAdd.setPreferredSize(new java.awt.Dimension(120, 25));
        jButton4AddCustomerAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton4AddCustomerAddMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton4AddCustomerAddMouseExited(evt);
            }
        });
        jButton4AddCustomerAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4AddCustomerAddActionPerformed(evt);
            }
        });

        addCusReset.setBackground(new java.awt.Color(51, 153, 255));
        addCusReset.setText("Reset");
        addCusReset.setPreferredSize(new java.awt.Dimension(80, 25));
        addCusReset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addCusResetMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addCusResetMouseExited(evt);
            }
        });
        addCusReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCusResetActionPerformed(evt);
            }
        });

        addCusEventID.setText("Event ID");

        addCusBack.setBackground(new java.awt.Color(51, 153, 255));
        addCusBack.setText("Back");
        addCusBack.setPreferredSize(new java.awt.Dimension(80, 25));
        addCusBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addCusBackMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addCusBackMouseExited(evt);
            }
        });
        addCusBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCusBackActionPerformed(evt);
            }
        });

        addCusNext.setBackground(new java.awt.Color(51, 153, 255));
        addCusNext.setText("Next");
        addCusNext.setPreferredSize(new java.awt.Dimension(80, 25));
        addCusNext.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addCusNextMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addCusNextMouseExited(evt);
            }
        });
        addCusNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCusNextActionPerformed(evt);
            }
        });

        addCustAddFP.setBackground(new java.awt.Color(51, 153, 255));
        addCustAddFP.setText("Add Food Package");
        addCustAddFP.setPreferredSize(new java.awt.Dimension(140, 25));
        addCustAddFP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addCustAddFPMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addCustAddFPMouseExited(evt);
            }
        });
        addCustAddFP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCustAddFPActionPerformed(evt);
            }
        });

        hallPrice.setEnabled(false);

        jLabel2.setText("Hall Room Name :");

        jButton1.setText("search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addCustomerPanelLayout = new javax.swing.GroupLayout(addCustomerPanel);
        addCustomerPanel.setLayout(addCustomerPanelLayout);
        addCustomerPanelLayout.setHorizontalGroup(
            addCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addCustomerPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(addCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addCustomerPanelLayout.createSequentialGroup()
                        .addComponent(hallPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(146, 146, 146))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addCustomerPanelLayout.createSequentialGroup()
                        .addGroup(addCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(addCustomerPanelLayout.createSequentialGroup()
                                .addComponent(addCusBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(addCusNext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(jButton4AddCustomerAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(addCustAddFP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(addCusReset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 599, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(228, 228, 228))))
            .addGroup(addCustomerPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(addCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1AddCustomerName)
                    .addComponent(addCusEventID)
                    .addComponent(jLabel2AddCustomerNIC))
                .addGap(26, 26, 26)
                .addGroup(addCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtAddCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAddCustomerNIC, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(addCustomerPanelLayout.createSequentialGroup()
                        .addComponent(addCusEventIDlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addGap(34, 34, 34)
                .addGroup(addCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(addCustomerPanelLayout.createSequentialGroup()
                        .addComponent(jLabel5AddContactNo)
                        .addGap(62, 62, 62)
                        .addComponent(txtAddCustomerTelephoneNo, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addCustomerPanelLayout.createSequentialGroup()
                        .addGroup(addCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4AddAddress)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(addCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtAddCustomerAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                            .addComponent(txthallroomno))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        addCustomerPanelLayout.setVerticalGroup(
            addCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addCustomerPanelLayout.createSequentialGroup()
                .addGroup(addCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addCustomerPanelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(addCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addCusEventID)
                            .addComponent(addCusEventIDlbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(txthallroomno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addGap(18, 18, 18)
                        .addGroup(addCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAddCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1AddCustomerName)
                            .addComponent(jLabel4AddAddress)
                            .addComponent(txtAddCustomerAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(addCustomerPanelLayout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addGroup(addCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2AddCustomerNIC)
                            .addComponent(jLabel5AddContactNo)
                            .addComponent(txtAddCustomerNIC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAddCustomerTelephoneNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(33, 33, 33)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(addCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addCusBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addCusNext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4AddCustomerAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addCustAddFP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addCusReset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(hallPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPaneCustomer.addTab("Add Customer", addCustomerPanel);

        viewCustomerPanel.setBackground(new java.awt.Color(255, 255, 255));
        viewCustomerPanel.setPreferredSize(new java.awt.Dimension(830, 550));

        jLabel1ViewEnterCustomerNIC.setText("Enter Customer NID");

        txtViewCustomerEnterCustomerNIC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtViewCustomerEnterCustomerNICKeyTyped(evt);
            }
        });

        viewCustomerTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 153, 255)));
        viewCustomerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Event ID", "Customer Name", "NID", "Address", "Telephone No"
            }
        ));
        viewCustomerTable.setGridColor(new java.awt.Color(51, 153, 255));
        jScrollPane5.setViewportView(viewCustomerTable);

        viewCusNext.setBackground(new java.awt.Color(51, 153, 255));
        viewCusNext.setText("Add Food Package");
        viewCusNext.setPreferredSize(new java.awt.Dimension(80, 25));
        viewCusNext.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                viewCusNextMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                viewCusNextMouseExited(evt);
            }
        });
        viewCusNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewCusNextActionPerformed(evt);
            }
        });

        viewCusBack.setBackground(new java.awt.Color(51, 153, 255));
        viewCusBack.setText("Back");
        viewCusBack.setPreferredSize(new java.awt.Dimension(80, 25));
        viewCusBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                viewCusBackMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                viewCusBackMouseExited(evt);
            }
        });
        viewCusBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewCusBackActionPerformed(evt);
            }
        });

        viewCusSearch.setBackground(new java.awt.Color(51, 153, 255));
        viewCusSearch.setText("Search");
        viewCusSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                viewCusSearchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                viewCusSearchMouseExited(evt);
            }
        });
        viewCusSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewCusSearchActionPerformed(evt);
            }
        });

        viewCusReset.setBackground(new java.awt.Color(51, 153, 255));
        viewCusReset.setText("Reset");
        viewCusReset.setPreferredSize(new java.awt.Dimension(80, 25));
        viewCusReset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                viewCusResetMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                viewCusResetMouseExited(evt);
            }
        });
        viewCusReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewCusResetActionPerformed(evt);
            }
        });

        jLabel1.setText("Event Id :");

        jLabel3.setText("Hall Room No :");

        javax.swing.GroupLayout viewCustomerPanelLayout = new javax.swing.GroupLayout(viewCustomerPanel);
        viewCustomerPanel.setLayout(viewCustomerPanelLayout);
        viewCustomerPanelLayout.setHorizontalGroup(
            viewCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewCustomerPanelLayout.createSequentialGroup()
                .addGroup(viewCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(viewCustomerPanelLayout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(viewCusBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(viewCusNext, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(viewCusReset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(viewCustomerPanelLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(viewCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1ViewEnterCustomerNIC)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addGap(33, 33, 33)
                        .addGroup(viewCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtViewCustomerEnterCustomerNIC, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                            .addComponent(txteventid)
                            .addComponent(hrno))
                        .addGap(36, 36, 36)
                        .addComponent(viewCusSearch))
                    .addGroup(viewCustomerPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 596, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(128, Short.MAX_VALUE))
        );
        viewCustomerPanelLayout.setVerticalGroup(
            viewCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewCustomerPanelLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(viewCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1ViewEnterCustomerNIC)
                    .addComponent(txtViewCustomerEnterCustomerNIC, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewCusSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(viewCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txteventid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(viewCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(hrno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(viewCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewCusNext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewCusBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewCusReset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(78, 78, 78))
        );

        jTabbedPaneCustomer.addTab("View Customer", viewCustomerPanel);

        updateCustomerPanel.setBackground(new java.awt.Color(255, 255, 255));
        updateCustomerPanel.setPreferredSize(new java.awt.Dimension(830, 550));

        jLabel1UpdateEnterCustomerNIC.setText("Enter Customer NID");

        txtUpdateEnterCustomerNIC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUpdateEnterCustomerNICKeyTyped(evt);
            }
        });

        updateCustomerTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 153, 255)));
        updateCustomerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Event ID", "Customer Name", "NID", "Address", "Telephone No"
            }
        ));
        updateCustomerTable.setGridColor(new java.awt.Color(51, 153, 255));
        updateCustomerTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateCustomerTableMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(updateCustomerTable);

        jButton5UpdateCustomerUpdate.setBackground(new java.awt.Color(51, 153, 255));
        jButton5UpdateCustomerUpdate.setText("Update");
        jButton5UpdateCustomerUpdate.setPreferredSize(new java.awt.Dimension(80, 25));
        jButton5UpdateCustomerUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton5UpdateCustomerUpdateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton5UpdateCustomerUpdateMouseExited(evt);
            }
        });
        jButton5UpdateCustomerUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5UpdateCustomerUpdateActionPerformed(evt);
            }
        });

        UpdateCusReset.setBackground(new java.awt.Color(51, 153, 255));
        UpdateCusReset.setText("Reset");
        UpdateCusReset.setPreferredSize(new java.awt.Dimension(80, 25));
        UpdateCusReset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                UpdateCusResetMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                UpdateCusResetMouseExited(evt);
            }
        });
        UpdateCusReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateCusResetActionPerformed(evt);
            }
        });

        jLabel4UpdateCustomerName.setText("Customer Name");

        jLabel4CustomerAddress.setText("Customer Address");

        jLabel10CustomerTel.setText("Customer Contact No");

        jButton12UpdateCusSearch.setBackground(new java.awt.Color(51, 153, 255));
        jButton12UpdateCusSearch.setText("Search");
        jButton12UpdateCusSearch.setPreferredSize(new java.awt.Dimension(80, 25));
        jButton12UpdateCusSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton12UpdateCusSearchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton12UpdateCusSearchMouseExited(evt);
            }
        });
        jButton12UpdateCusSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12UpdateCusSearchActionPerformed(evt);
            }
        });

        updateCusEventIDlbl.setText("Event ID");

        updateCusBack.setBackground(new java.awt.Color(51, 153, 255));
        updateCusBack.setText("Back");
        updateCusBack.setPreferredSize(new java.awt.Dimension(80, 25));
        updateCusBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                updateCusBackMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                updateCusBackMouseExited(evt);
            }
        });
        updateCusBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateCusBackActionPerformed(evt);
            }
        });

        updateCusNext.setBackground(new java.awt.Color(51, 153, 255));
        updateCusNext.setText("Add Food Package");
        updateCusNext.setPreferredSize(new java.awt.Dimension(80, 25));
        updateCusNext.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                updateCusNextMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                updateCusNextMouseExited(evt);
            }
        });
        updateCusNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateCusNextActionPerformed(evt);
            }
        });

        updateCusEventID.setEditable(false);

        javax.swing.GroupLayout updateCustomerPanelLayout = new javax.swing.GroupLayout(updateCustomerPanel);
        updateCustomerPanel.setLayout(updateCustomerPanelLayout);
        updateCustomerPanelLayout.setHorizontalGroup(
            updateCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateCustomerPanelLayout.createSequentialGroup()
                .addGroup(updateCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updateCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(updateCustomerPanelLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jScrollPane6))
                        .addGroup(updateCustomerPanelLayout.createSequentialGroup()
                            .addGap(49, 49, 49)
                            .addGroup(updateCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1UpdateEnterCustomerNIC)
                                .addComponent(jLabel4UpdateCustomerName)
                                .addComponent(jLabel4CustomerAddress))
                            .addGap(39, 39, 39)
                            .addGroup(updateCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtUpdateCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtUpdateEnterCustomerNIC, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtUpdateCustomerAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(53, 53, 53)
                            .addGroup(updateCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton12UpdateCusSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(updateCustomerPanelLayout.createSequentialGroup()
                                    .addGroup(updateCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel10CustomerTel)
                                        .addComponent(updateCusEventIDlbl))
                                    .addGap(32, 32, 32)
                                    .addGroup(updateCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(updateCusEventID)
                                        .addComponent(txtUpdateCustomerTel, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGap(23, 23, 23)))
                    .addGroup(updateCustomerPanelLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(updateCusBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(jButton5UpdateCustomerUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64)
                        .addComponent(updateCusNext, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(UpdateCusReset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(118, Short.MAX_VALUE))
        );
        updateCustomerPanelLayout.setVerticalGroup(
            updateCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateCustomerPanelLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(updateCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1UpdateEnterCustomerNIC)
                    .addComponent(txtUpdateEnterCustomerNIC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton12UpdateCusSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(updateCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(updateCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(updateCustomerPanelLayout.createSequentialGroup()
                            .addGroup(updateCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4UpdateCustomerName)
                                .addComponent(txtUpdateCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(26, 26, 26)
                            .addGroup(updateCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4CustomerAddress)
                                .addComponent(txtUpdateCustomerAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(updateCusEventIDlbl))
                    .addGroup(updateCustomerPanelLayout.createSequentialGroup()
                        .addComponent(updateCusEventID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addGroup(updateCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUpdateCustomerTel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10CustomerTel))))
                .addGap(54, 54, 54)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(updateCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateCusBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UpdateCusReset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateCusNext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5UpdateCustomerUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39))
        );

        jTabbedPaneCustomer.addTab("Update Customer", updateCustomerPanel);

        javax.swing.GroupLayout customerPanelLayout = new javax.swing.GroupLayout(customerPanel);
        customerPanel.setLayout(customerPanelLayout);
        customerPanelLayout.setHorizontalGroup(
            customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, customerPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jTabbedPaneCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 749, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        customerPanelLayout.setVerticalGroup(
            customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneCustomer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 413, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addComponent(customerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(customerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
        );

        headerPanel.setBackground(new java.awt.Color(0, 51, 51));
        headerPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 153, 255), 2));
        headerPanel.setLayout(null);

        welcomeuser.setFont(new java.awt.Font("Monotype Corsiva", 3, 30)); // NOI18N
        welcomeuser.setForeground(new java.awt.Color(240, 240, 240));
        welcomeuser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        welcomeuser.setText("Name");
        headerPanel.add(welcomeuser);
        welcomeuser.setBounds(420, 60, 170, 20);

        welcomeuser1.setFont(new java.awt.Font("Monotype Corsiva", 3, 36)); // NOI18N
        welcomeuser1.setForeground(new java.awt.Color(240, 240, 240));
        welcomeuser1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        welcomeuser1.setText("WELCOME ");
        headerPanel.add(welcomeuser1);
        welcomeuser1.setBounds(370, 10, 270, 30);

        Time.setFont(new java.awt.Font("Monotype Corsiva", 3, 30)); // NOI18N
        Time.setForeground(new java.awt.Color(240, 240, 240));
        Time.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Time.setText("Time");
        headerPanel.add(Time);
        Time.setBounds(190, 90, 170, 30);

        dates.setFont(new java.awt.Font("Monotype Corsiva", 3, 30)); // NOI18N
        dates.setForeground(new java.awt.Color(240, 240, 240));
        dates.setText("date");
        headerPanel.add(dates);
        dates.setBounds(640, 90, 210, 30);

        day.setFont(new java.awt.Font("Monotype Corsiva", 3, 30)); // NOI18N
        day.setForeground(new java.awt.Color(240, 240, 240));
        day.setText("Day");
        headerPanel.add(day);
        day.setBounds(450, 90, 140, 30);

        buttonLogOut.setBackground(new java.awt.Color(255, 255, 255));
        buttonLogOut.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        buttonLogOut.setForeground(new java.awt.Color(51, 153, 255));
        buttonLogOut.setText("Log Out");
        buttonLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLogOutActionPerformed(evt);
            }
        });
        headerPanel.add(buttonLogOut);
        buttonLogOut.setBounds(910, 80, 77, 33);

        jPanel1.setBackground(new java.awt.Color(0, 51, 51));
        jPanel1.setForeground(new java.awt.Color(0, 51, 51));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 173, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        Back.setText("Back");
        Back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BackMouseClicked(evt);
            }
        });
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });
        jMenuBar1.add(Back);

        Home.setText("Home");
        Home.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HomeMouseClicked(evt);
            }
        });
        Home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomeActionPerformed(evt);
            }
        });
        jMenuBar1.add(Home);

        Exit.setText("Exit");
        Exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ExitMouseClicked(evt);
            }
        });
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        jMenuBar1.add(Exit);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 1024, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackMouseClicked
        // TODO add your handling code here:
        EventManager mp = new EventManager(USER);
        mp.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BackMouseClicked

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BackActionPerformed

    private void HomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HomeMouseClicked
        // TODO add your handling code here:
        EventManager HM = new EventManager(USER);
        HM.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_HomeMouseClicked

    private void HomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HomeActionPerformed

    private void ExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitMouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_ExitMouseClicked

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ExitActionPerformed

    private void txtAddCustomerNICActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddCustomerNICActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddCustomerNICActionPerformed

    private void jButton4AddCustomerAddMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4AddCustomerAddMouseEntered
        jButton4AddCustomerAdd.setForeground(Color.yellow);
    }//GEN-LAST:event_jButton4AddCustomerAddMouseEntered

    private void jButton4AddCustomerAddMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4AddCustomerAddMouseExited
        jButton4AddCustomerAdd.setForeground(Color.black);
    }//GEN-LAST:event_jButton4AddCustomerAddMouseExited

    private void jButton4AddCustomerAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4AddCustomerAddActionPerformed
        if (txtAddCustomerName.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Please Insert Customer Name");
            txtAddCustomerName.requestFocus();
            txtAddCustomerName.setBackground(new Color(255, 150, 150));
        } else {
            if (txtAddCustomerNIC.getText().isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Please Insert Customer NID Number");
                txtAddCustomerNIC.requestFocus();
                txtAddCustomerNIC.setBackground(new Color(255, 150, 150));
            } else {

                if (txtAddCustomerAddress.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(rootPane, "Please Insert Customer Address");
                    txtAddCustomerAddress.requestFocus();
                    txtAddCustomerAddress.setBackground(new Color(255, 150, 150));
                } else {
                    if (txtAddCustomerTelephoneNo.getText().isEmpty()) {
                        JOptionPane.showMessageDialog(rootPane, "Please Insert Customer Address");
                        txtAddCustomerTelephoneNo.requestFocus();
                        txtAddCustomerTelephoneNo.setBackground(new Color(255, 150, 150));
                    } else {
                        String eventID = addCusEventIDlbl.getText();
                        String cusName = txtAddCustomerName.getText();
                        String cusNIC = txtAddCustomerNIC.getText();
                        String cusAddress = txtAddCustomerAddress.getText();
                        String cusTel = txtAddCustomerTelephoneNo.getText();
                        String hNo=txthallroomno.getText();
                        Connection con = null;
                        Statement st = null;
                        ResultSet rs = null;
                        try {
                            con = DatabaseHelper.getDBConnection();
                            st = con.createStatement();
                            rs = st.executeQuery("select * from event_customer_info where cus_event_id='" + eventID + "'");
                            int count = 0;
                            while (rs.next()) {
                                count = rs.getRow();
                            }

                            if (count > 0) {
                                JOptionPane.showMessageDialog(null, "Invalid Customer id", "invaild input", JOptionPane.ERROR_MESSAGE);
                                txtAddCustomerNIC.setText("");
                                txtAddCustomerNIC.setBackground(Color.red);

                            } else {
                                rs = st.executeQuery("select * from event_customer_info where customer_NID='" + cusNIC + "'");
                                int abc = 0;
                                while (rs.next()) {
                                    abc = rs.getRow();
                                }

                                if (abc > 0) {
                                    JOptionPane.showMessageDialog(null, "Invalid NID", "invaild input", JOptionPane.ERROR_MESSAGE);
                                    txtAddCustomerNIC.setText("");
                                    txtAddCustomerNIC.setBackground(Color.red);
                                } else {
                                    int x = JOptionPane.showConfirmDialog(null, "Do you want to save this record?");
                                    if (x == 0) {

                                        try {
                                            con = DatabaseHelper.getDBConnection();

                                            String q = "INSERT INTO event_customer_info (cus_event_id,customer_name,customer_NID,customer_address,customer_tel, h_no) VALUES ('" + eventID + "','" + cusName + "','" + cusNIC + "','" + cusAddress + "','" + cusTel + "','"+hNo+"')";
                                            String sql3="update eventbill set CustomerName= '"+cusName+"' where event_id='"+eventID+"'";
                                            
                                            st = con.createStatement();
                                            st.executeUpdate(q);
                                            st.executeUpdate(sql3);

                                            rs = st.executeQuery("select * from event_customer_info where customer_NID='" + cusNIC + "'");
                                            while (rs.next()) {
                                                model.addRow(new Object[]{rs.getString("cus_event_id"), rs.getString("customer_name"), rs.getString("customer_NID"), rs.getString("customer_address"), rs.getString("customer_tel")});
                                            }
                                            JOptionPane.showMessageDialog(null, "Successfully added to the database");
                                            rs.close();
                                            st.close();
                                            con.close();

                                        } catch (SQLException ex) {
                                            ex.printStackTrace();
                                        }
                                    }
                                }

                            }

                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                    }
                }
            }
        }


    }//GEN-LAST:event_jButton4AddCustomerAddActionPerformed

    private void addCusResetMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addCusResetMouseEntered
        addCusReset.setForeground(Color.yellow);
    }//GEN-LAST:event_addCusResetMouseEntered

    private void addCusResetMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addCusResetMouseExited
        addCusReset.setForeground(Color.black);
    }//GEN-LAST:event_addCusResetMouseExited

    private void addCusResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCusResetActionPerformed
        addCusEventIDlbl.setText("");
        txtAddCustomerName.setText("");
        txtAddCustomerAddress.setText("");
        txtAddCustomerNIC.setText("");
        txtAddCustomerTelephoneNo.setText("");
        if (addCustomerTable.getRowCount() > 0) {
            for (int i = addCustomerTable.getRowCount() - 1; i >= 0; i--) {
                model.removeRow(i);
            }
        }
    }//GEN-LAST:event_addCusResetActionPerformed

    private void addCusBackMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addCusBackMouseEntered
        addCusBack.setForeground(Color.yellow);
    }//GEN-LAST:event_addCusBackMouseEntered

    private void addCusBackMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addCusBackMouseExited
        addCusBack.setForeground(Color.black);
    }//GEN-LAST:event_addCusBackMouseExited

    private void addCusBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCusBackActionPerformed
        EventManager em = new EventManager(USER);
        em.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_addCusBackActionPerformed

    private void addCusNextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addCusNextMouseEntered
        addCusNext.setForeground(Color.yellow);
    }//GEN-LAST:event_addCusNextMouseEntered

    private void addCusNextMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addCusNextMouseExited
        addCusNext.setForeground(Color.black);
    }//GEN-LAST:event_addCusNextMouseExited

    private void addCusNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCusNextActionPerformed
        jTabbedPaneCustomer.setSelectedIndex(1);
    }//GEN-LAST:event_addCusNextActionPerformed

    private void addCustAddFPMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addCustAddFPMouseEntered
        addCustAddFP.setForeground(Color.yellow);
    }//GEN-LAST:event_addCustAddFPMouseEntered

    private void addCustAddFPMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addCustAddFPMouseExited
        addCustAddFP.setForeground(Color.black);
    }//GEN-LAST:event_addCustAddFPMouseExited

    private void addCustAddFPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCustAddFPActionPerformed
       String a=addCusEventIDlbl.getText();
       String b=txtAddCustomerNIC.getText();
       String c=txthallroomno.getText();
        FoodPanel fp = new FoodPanel(a,b,c,USER);
        fp.setVisible(true);
        this.dispose();
       
    }//GEN-LAST:event_addCustAddFPActionPerformed

    private void viewCusNextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewCusNextMouseEntered
        viewCusNext.setForeground(Color.yellow);
    }//GEN-LAST:event_viewCusNextMouseEntered

    private void viewCusNextMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewCusNextMouseExited
        viewCusNext.setForeground(Color.black);
    }//GEN-LAST:event_viewCusNextMouseExited

    private void viewCusNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewCusNextActionPerformed
         String a=txteventid.getText();
       String b=txtViewCustomerEnterCustomerNIC.getText();
       String c=txthallroomno.getText();
        FoodPanel fp = new FoodPanel(a,b,c,USER);
        fp.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_viewCusNextActionPerformed

    private void viewCusBackMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewCusBackMouseEntered
        viewCusBack.setForeground(Color.yellow);
    }//GEN-LAST:event_viewCusBackMouseEntered

    private void viewCusBackMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewCusBackMouseExited
        viewCusBack.setForeground(Color.black);
    }//GEN-LAST:event_viewCusBackMouseExited

    private void viewCusBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewCusBackActionPerformed
        jTabbedPaneCustomer.setSelectedIndex(0);
    }//GEN-LAST:event_viewCusBackActionPerformed

    private void viewCusSearchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewCusSearchMouseEntered
        viewCusSearch.setForeground(Color.yellow);
    }//GEN-LAST:event_viewCusSearchMouseEntered

    private void viewCusSearchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewCusSearchMouseExited
        viewCusSearch.setForeground(Color.black);
    }//GEN-LAST:event_viewCusSearchMouseExited

    private void viewCusSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewCusSearchActionPerformed
        if (txtViewCustomerEnterCustomerNIC.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Please Enter Customer NID Number");
        } else {
            Connection con = null;
            Statement st = null;
            ResultSet rs = null;
            try {
                con = DatabaseHelper.getDBConnection();
                st = con.createStatement();

                String cusNIC = txtViewCustomerEnterCustomerNIC.getText();
                String qu = "select * FROM event_customer_info WHERE customer_NID = '" + cusNIC + "'";
                rs = st.executeQuery(qu);
                int count=0;
                while (rs.next()) {
                    count=rs.getRow();
                    model2.addRow(new Object[]{rs.getString("cus_event_id"), rs.getString("customer_name"), rs.getString("customer_NID"), rs.getString("customer_address"), rs.getString("customer_tel")});
                    txteventid.setText(rs.getString("cus_event_id"));
                    hrno.setText(rs.getString("h_no"));
                }
                if(count==0){
                    JOptionPane.showMessageDialog(rootPane, "Sorry No Data Found");
                }
                rs.close();
                st.close();
                con.close();

            } catch (Exception e) {
                e.printStackTrace();
            }
        }

    }//GEN-LAST:event_viewCusSearchActionPerformed

    private void viewCusResetMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewCusResetMouseEntered
        viewCusReset.setForeground(Color.yellow);
    }//GEN-LAST:event_viewCusResetMouseEntered

    private void viewCusResetMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewCusResetMouseExited
        viewCusReset.setForeground(Color.black);
    }//GEN-LAST:event_viewCusResetMouseExited

    private void viewCusResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewCusResetActionPerformed
        txtViewCustomerEnterCustomerNIC.setText("");
        if (viewCustomerTable.getRowCount() > 0) {
            for (int i = viewCustomerTable.getRowCount() - 1; i >= 0; i--) {
                model2.removeRow(i);
            }
        }
    }//GEN-LAST:event_viewCusResetActionPerformed

    private void updateCustomerTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateCustomerTableMouseClicked
        try {
            int row = updateCustomerTable.getSelectedRow();

            //String customerId=updateCustomerTable.getValueAt(row, 0).toString();
            String eventID = updateCustomerTable.getValueAt(row, 0).toString();
            String customerName = updateCustomerTable.getValueAt(row, 1).toString();
            String customerNIC = updateCustomerTable.getValueAt(row, 2).toString();
            String customerAdd = updateCustomerTable.getValueAt(row, 3).toString();
            String customerTel = updateCustomerTable.getValueAt(row, 4).toString();

            txtUpdateCustomerName.setText(customerName);
            txtUpdateCustomerAdd.setText(customerAdd);
            txtUpdateCustomerTel.setText(customerTel);
            txtUpdateEnterCustomerNIC.setText(customerNIC);
            updateCusEventID.setText(eventID);

        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_updateCustomerTableMouseClicked

    private void jButton5UpdateCustomerUpdateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5UpdateCustomerUpdateMouseEntered
        jButton5UpdateCustomerUpdate.setForeground(Color.yellow);
    }//GEN-LAST:event_jButton5UpdateCustomerUpdateMouseEntered

    private void jButton5UpdateCustomerUpdateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5UpdateCustomerUpdateMouseExited
        jButton5UpdateCustomerUpdate.setForeground(Color.black);
    }//GEN-LAST:event_jButton5UpdateCustomerUpdateMouseExited

    private void jButton5UpdateCustomerUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5UpdateCustomerUpdateActionPerformed
        Connection con = null;
        Statement st = null;
        ResultSet rs = null;

        try {

            int x = JOptionPane.showConfirmDialog(null, "Do you want to update?");

            if (x == 0) {
                String eventID=updateCusEventID.getText();
                String cusNIC = txtUpdateEnterCustomerNIC.getText();
                String cusName = txtUpdateCustomerName.getText();
                String cusAdd = txtUpdateCustomerAdd.getText();
                String cusTel = txtUpdateCustomerTel.getText();
                con = DatabaseHelper.getDBConnection();
                st = con.createStatement();
                String sql = "UPDATE event_customer_info SET customer_name='" + cusName + "',customer_address='" + cusAdd + "',customer_tel='" + cusTel + "' WHERE customer_NID = '" + cusNIC + "'";
                String sql3="update eventbill set CustomerName= '"+cusName+"' where event_id='"+eventID+"'";
                st.executeUpdate(sql3);
                int count = 0;
                count = st.executeUpdate(sql);
                if (count > 0) {
                    JOptionPane.showMessageDialog(rootPane, "Update Successfull");
                }

                rs = st.executeQuery("select * from event_customer_info WHERE customer_NID = '" + cusNIC + "'");
                while (rs.next()) {
                    model1.addRow(new Object[]{rs.getString("cus_event_id"), rs.getString("customer_name"), rs.getString("customer_NID"), rs.getString("customer_address"), rs.getString("customer_tel")});
                }
                rs.close();
                st.close();
                con.close();

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton5UpdateCustomerUpdateActionPerformed

    private void UpdateCusResetMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UpdateCusResetMouseEntered
        UpdateCusReset.setForeground(Color.yellow);
    }//GEN-LAST:event_UpdateCusResetMouseEntered

    private void UpdateCusResetMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UpdateCusResetMouseExited
        UpdateCusReset.setForeground(Color.black);
    }//GEN-LAST:event_UpdateCusResetMouseExited

    private void UpdateCusResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateCusResetActionPerformed
        updateCusEventID.setText("");
        txtUpdateCustomerAdd.setText("");
        txtUpdateCustomerName.setText("");
        txtUpdateCustomerTel.setText("");
        txtUpdateEnterCustomerNIC.setText("");
        if (updateCustomerTable.getRowCount() > 0) {
            for (int i = updateCustomerTable.getRowCount() - 1; i >= 0; i--) {
                model1.removeRow(i);
            }
        }
    }//GEN-LAST:event_UpdateCusResetActionPerformed

    private void jButton12UpdateCusSearchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton12UpdateCusSearchMouseEntered
        jButton12UpdateCusSearch.setForeground(Color.yellow);
    }//GEN-LAST:event_jButton12UpdateCusSearchMouseEntered

    private void jButton12UpdateCusSearchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton12UpdateCusSearchMouseExited
        jButton12UpdateCusSearch.setForeground(Color.black);
    }//GEN-LAST:event_jButton12UpdateCusSearchMouseExited

    private void jButton12UpdateCusSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12UpdateCusSearchActionPerformed
        //Search Customer NIC for update customer details
        Connection con = null;
        Statement st = null;
        ResultSet rs = null;
        try {
            con = DatabaseHelper.getDBConnection();
            st = con.createStatement();

            String cusNIC = txtUpdateEnterCustomerNIC.getText();
            String qu = "select * FROM event_customer_info WHERE customer_NID = '" + cusNIC + "'";
            rs = st.executeQuery(qu);
            int count=0;
            while (rs.next()) {
                count=rs.getRow();
                txtUpdateCustomerName.setText(rs.getString("customer_name"));
                txtUpdateCustomerAdd.setText(rs.getString("customer_address"));
                txtUpdateCustomerTel.setText(rs.getString("customer_tel"));
                updateCusEventID.setText(rs.getString("cus_event_id"));
            }
            if(count==0){
                    JOptionPane.showMessageDialog(rootPane, "Sorry No Data Found");
                }
            rs.close();
            st.close();
            con.close();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton12UpdateCusSearchActionPerformed

    private void updateCusBackMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateCusBackMouseEntered
        updateCusBack.setForeground(Color.yellow);
    }//GEN-LAST:event_updateCusBackMouseEntered

    private void updateCusBackMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateCusBackMouseExited
        updateCusBack.setForeground(Color.black);
    }//GEN-LAST:event_updateCusBackMouseExited

    private void updateCusBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateCusBackActionPerformed
        jTabbedPaneCustomer.setSelectedIndex(1);
    }//GEN-LAST:event_updateCusBackActionPerformed

    private void updateCusNextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateCusNextMouseEntered
        updateCusNext.setForeground(Color.yellow);
    }//GEN-LAST:event_updateCusNextMouseEntered

    private void updateCusNextMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateCusNextMouseExited
        updateCusNext.setForeground(Color.black);
    }//GEN-LAST:event_updateCusNextMouseExited

    private void updateCusNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateCusNextActionPerformed
        String a=updateCusEventID.getText();
       String b=txtUpdateEnterCustomerNIC.getText();
       String c=txthallroomno.getText();
        FoodPanel fp = new FoodPanel(a,b,c,USER);
        fp.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_updateCusNextActionPerformed

    private void txtAddCustomerTelephoneNoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAddCustomerTelephoneNoKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || c == KeyEvent.VK_DELETE)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtAddCustomerTelephoneNoKeyTyped

    private void txtAddCustomerNICKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAddCustomerNICKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || c == KeyEvent.VK_DELETE)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtAddCustomerNICKeyTyped

    private void txtViewCustomerEnterCustomerNICKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtViewCustomerEnterCustomerNICKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || c == KeyEvent.VK_DELETE)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtViewCustomerEnterCustomerNICKeyTyped

    private void txtUpdateEnterCustomerNICKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUpdateEnterCustomerNICKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || c == KeyEvent.VK_DELETE)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtUpdateEnterCustomerNICKeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String eid =addCusEventIDlbl.getText();
        Connection con;
        Statement st;
        ResultSet rs;
        try {
            con = DatabaseHelper.getDBConnection();
            st=con.createStatement();
            rs=st.executeQuery("select * from event where eventId='"+eid+"'");
            int count=0;
            while(rs.next()){
                count=rs.getRow();
                if(count>0){
                txthallroomno.setText(rs.getString("hallName"));
            }
                
            }
            rs.close();
            st.close();
            con.close();
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void buttonLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLogOutActionPerformed
        int result=JOptionPane.showConfirmDialog(rootPane, "Do You Want to LogOut");
        if(result==0){

            login login=new login();
            login.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_buttonLogOutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Customer(e, h, g, USER).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Back;
    private javax.swing.JMenu Exit;
    private javax.swing.JMenu Home;
    private javax.swing.JLabel Time;
    private javax.swing.JButton UpdateCusReset;
    private javax.swing.JButton addCusBack;
    private javax.swing.JLabel addCusEventID;
    private javax.swing.JTextField addCusEventIDlbl;
    private javax.swing.JButton addCusNext;
    private javax.swing.JButton addCusReset;
    private javax.swing.JButton addCustAddFP;
    private javax.swing.JPanel addCustomerPanel;
    private javax.swing.JTable addCustomerTable;
    private javax.swing.JButton buttonLogOut;
    private javax.swing.JPanel customerPanel;
    private javax.swing.JLabel dates;
    private javax.swing.JLabel day;
    private javax.swing.JLabel hallPrice;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JTextField hrno;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton12UpdateCusSearch;
    private javax.swing.JButton jButton4AddCustomerAdd;
    private javax.swing.JButton jButton5UpdateCustomerUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10CustomerTel;
    private javax.swing.JLabel jLabel1AddCustomerName;
    private javax.swing.JLabel jLabel1UpdateEnterCustomerNIC;
    private javax.swing.JLabel jLabel1ViewEnterCustomerNIC;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel2AddCustomerNIC;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4AddAddress;
    private javax.swing.JLabel jLabel4CustomerAddress;
    private javax.swing.JLabel jLabel4UpdateCustomerName;
    private javax.swing.JLabel jLabel5AddContactNo;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPaneCustomer;
    private javax.swing.JTextField txtAddCustomerAddress;
    private javax.swing.JTextField txtAddCustomerNIC;
    private javax.swing.JTextField txtAddCustomerName;
    private javax.swing.JTextField txtAddCustomerTelephoneNo;
    private javax.swing.JTextField txtUpdateCustomerAdd;
    private javax.swing.JTextField txtUpdateCustomerName;
    private javax.swing.JTextField txtUpdateCustomerTel;
    private javax.swing.JTextField txtUpdateEnterCustomerNIC;
    private javax.swing.JTextField txtViewCustomerEnterCustomerNIC;
    private javax.swing.JTextField txteventid;
    private javax.swing.JTextField txthallroomno;
    private javax.swing.JButton updateCusBack;
    private javax.swing.JTextField updateCusEventID;
    private javax.swing.JLabel updateCusEventIDlbl;
    private javax.swing.JButton updateCusNext;
    private javax.swing.JPanel updateCustomerPanel;
    private javax.swing.JTable updateCustomerTable;
    private javax.swing.JButton viewCusBack;
    private javax.swing.JButton viewCusNext;
    private javax.swing.JButton viewCusReset;
    private javax.swing.JButton viewCusSearch;
    private javax.swing.JPanel viewCustomerPanel;
    private javax.swing.JTable viewCustomerTable;
    private javax.swing.JLabel welcomeuser;
    private javax.swing.JLabel welcomeuser1;
    // End of variables declaration//GEN-END:variables
}
